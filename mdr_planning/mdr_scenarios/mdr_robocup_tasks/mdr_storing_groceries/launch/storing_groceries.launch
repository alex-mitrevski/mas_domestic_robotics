<?xml version="1.0"?>
<launch>
    <!-- data paths -->
    <param name="/rosplan/data_path" value="$(find mdr_storing_groceries)/common/" />
    <param name="/rosplan/planner_path" value="$(find rosplan_planning_system)/common/bin/" />

    <!-- domain file -->
    <param name="/rosplan/domain_path" value="$(find mdr_storing_groceries)/common/domain.pddl" />

    <!-- knowledge base -->
    <node name="rosplan_knowledge_base" pkg="rosplan_knowledge_base" type="knowledgeBase" respawn="false" output="screen" />

    <!-- scene database (MongoDB) -->
    <node name="rosplan_scene_database" pkg="mongodb_store" type="mongodb_server.py" respawn="false" output="log">
        <param name="database_path" value="$(find rosplan_knowledge_base)/common/mongoDB" />
    </node>
    <node name="rosplan_scene_message_store" pkg="mongodb_store" type="message_store_node.py" respawn="false" output="log" />

    <!-- planning system -->
    <node name="rosplan_planning_system" pkg="rosplan_planning_system" type="planner" respawn="false" output="screen">
        <!-- directory for generated files -->
        <param name="data_path" value="$(find mdr_storing_groceries)/common/" />
        <param name="problem_path" value="$(find mdr_storing_groceries)/common/problem.pddl" />
        <param name="strl_file_path" value="$(find mdr_storing_groceries)/common/plan.strl" />

        <!-- to run the planner -->
        <param name="planner_command" value="timeout 10 $(find rosplan_planning_system)/common/bin/popf -n DOMAIN PROBLEM" />
        <param name="generate_default_problem" value="true" />
        <param name="max_dispatch_attempts" value="2" />
    </node>

    <node name="init_planning_problem" pkg="mdr_rosplan_interface" type="init_planning_problem" respawn="false" output="screen">
        <param name="problem_file" type="str" value="$(find mdr_storing_groceries)/common/default_problem.yaml" />
        <param name="kb_update_service" type="str" value="/kcl_rosplan/update_knowledge_base" />
    </node>
</launch>
